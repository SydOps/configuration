<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="53">
  <pipelines group="TwitterFeed">
    <pipeline name="WebApplication" isLocked="true">
      <materials>
        <git url="https://github.com/nigelfds/aws-twitter-feed" />
      </materials>
      <stage name="Specs">
        <jobs>
          <job name="Specs">
            <tasks>
              <exec command="./go" args="spec format=junit" />
            </tasks>
            <artifacts>
              <test src="build-output/test-reports" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="Package">
        <jobs>
          <job name="Package">
            <tasks>
              <exec command="./go" args="package" />
            </tasks>
            <artifacts>
              <artifact src="aws-twitter-feed-*.rpm" dest="rpms" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="Infrastructure" isLocked="true">
      <environmentvariables>
        <variable name="SETTINGS_FILE">
          <value>/tmp/boot/puppet/settings.yaml</value>
        </variable>
      </environmentvariables>
      <materials>
        <git url="https://github.com/nigelfds/configuration-master" />
      </materials>
      <stage name="PuppetSyntax">
        <jobs>
          <job name="PuppetSyntax">
            <tasks>
              <exec command="./go" args="test:puppet_syntax" />
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="Package">
        <jobs>
          <job name="Package">
            <tasks>
              <exec command="./go" args="package:puppet" />
            </tasks>
            <artifacts>
              <artifact src="build/boot.tar.gz" dest="build" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="SystemIntegration" isLocked="true">
      <environmentvariables>
        <variable name="SETTINGS_FILE">
          <value>/tmp/boot/puppet/settings.yaml</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="WebApplication" stageName="Package" materialName="upstreamArtifactApp" />
        <pipeline pipelineName="Infrastructure" stageName="Package" materialName="upstreamArtifactConfiguration" />
        <git url="https://github.com/nigelfds/configuration-master" />
      </materials>
      <stage name="BuildAppServer">
        <jobs>
          <job name="BuildAppServer">
            <tasks>
              <exec command="./go" args="aws:build_appserver" />
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="VerifyAppHealth">
        <jobs>
          <job name="VerifyAppHealth">
            <tasks>
              <exec command="./go" args="test:twitter_feed:health_check" />
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="CreateImage">
        <jobs>
          <job name="CreateImage">
            <tasks>
              <exec command="./go" args="aws:create_image" />
            </tasks>
            <artifacts>
              <artifact src="build/image" dest="build" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="ProductionDeploy" labeltemplate="${upstreamArtifactSystest}">
      <environmentvariables>
        <variable name="SETTINGS_FILE">
          <value>/tmp/boot/puppet/settings.yaml</value>
        </variable>
      </environmentvariables>
      <materials>
        <pipeline pipelineName="SystemIntegration" stageName="CreateImage" materialName="upstreamArtifactSystest" />
        <git url="https://github.com/nigelfds/configuration-master" materialName="configurationMaster" />
      </materials>
      <stage name="UpdateImage">
        <approval type="manual" />
        <jobs>
          <job name="UpdateImage">
            <tasks>
              <exec command="./go">
                <arg>aws:deploy_to_production</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="RollNewVersion">
        <jobs>
          <job
            name="RollNewVersion">
            <tasks>
              <exec command="./go">
                <arg>aws:roll_new_version</arg>
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
</cruise>

